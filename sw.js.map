{"version":3,"file":"sw.js","sources":["../../node_modules/workbox-core/_version.js","../../node_modules/workbox-core/_private/logger.js","../../node_modules/workbox-core/models/messages/messages.js","../../node_modules/workbox-core/models/messages/messageGenerator.js","../../node_modules/workbox-core/_private/WorkboxError.js","../../node_modules/workbox-core/_private/assert.js","../../node_modules/workbox-core/_private/cacheNames.js","../../node_modules/workbox-core/_private/getFriendlyURL.js","../../node_modules/workbox-range-requests/_version.js","../../node_modules/workbox-range-requests/createPartialResponse.js","../../node_modules/workbox-range-requests/utils/parseRangeHeader.js","../../node_modules/workbox-range-requests/utils/calculateEffectiveBoundaries.js","../../node_modules/workbox-routing/_version.js","../../node_modules/workbox-routing/utils/constants.js","../../node_modules/workbox-routing/utils/normalizeHandler.js","../../node_modules/workbox-routing/Route.js","../../node_modules/workbox-routing/RegExpRoute.js","../../node_modules/workbox-routing/Router.js","../../node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../../node_modules/workbox-routing/registerRoute.js","../../service-worker/errors.ts","../../service-worker/data-source.ts","../../node_modules/workbox-core/clientsClaim.js","../../service-worker/sw.ts","../../service-worker/course-php.ts"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.2.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`);\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return `workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:range-requests:6.2.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { calculateEffectiveBoundaries } from './utils/calculateEffectiveBoundaries.js';\nimport { parseRangeHeader } from './utils/parseRangeHeader.js';\nimport './_version.js';\n/**\n * Given a `Request` and `Response` objects as input, this will return a\n * promise for a new `Response`.\n *\n * If the original `Response` already contains partial content (i.e. it has\n * a status of 206), then this assumes it already fulfills the `Range:`\n * requirements, and will return it as-is.\n *\n * @param {Request} request A request, which should contain a Range:\n * header.\n * @param {Response} originalResponse A response.\n * @return {Promise<Response>} Either a `206 Partial Content` response, with\n * the response body set to the slice of content specified by the request's\n * `Range:` header, or a `416 Range Not Satisfiable` response if the\n * conditions of the `Range:` header can't be met.\n *\n * @memberof module:workbox-range-requests\n */\nasync function createPartialResponse(request, originalResponse) {\n    try {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-range-requests',\n                funcName: 'createPartialResponse',\n                paramName: 'request',\n            });\n            assert.isInstance(originalResponse, Response, {\n                moduleName: 'workbox-range-requests',\n                funcName: 'createPartialResponse',\n                paramName: 'originalResponse',\n            });\n        }\n        if (originalResponse.status === 206) {\n            // If we already have a 206, then just pass it through as-is;\n            // see https://github.com/GoogleChrome/workbox/issues/1720\n            return originalResponse;\n        }\n        const rangeHeader = request.headers.get('range');\n        if (!rangeHeader) {\n            throw new WorkboxError('no-range-header');\n        }\n        const boundaries = parseRangeHeader(rangeHeader);\n        const originalBlob = await originalResponse.blob();\n        const effectiveBoundaries = calculateEffectiveBoundaries(originalBlob, boundaries.start, boundaries.end);\n        const slicedBlob = originalBlob.slice(effectiveBoundaries.start, effectiveBoundaries.end);\n        const slicedBlobSize = slicedBlob.size;\n        const slicedResponse = new Response(slicedBlob, {\n            // Status code 206 is for a Partial Content response.\n            // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/206\n            status: 206,\n            statusText: 'Partial Content',\n            headers: originalResponse.headers,\n        });\n        slicedResponse.headers.set('Content-Length', String(slicedBlobSize));\n        slicedResponse.headers.set('Content-Range', `bytes ${effectiveBoundaries.start}-${effectiveBoundaries.end - 1}/` +\n            `${originalBlob.size}`);\n        return slicedResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.warn(`Unable to construct a partial response; returning a ` +\n                `416 Range Not Satisfiable response instead.`);\n            logger.groupCollapsed(`View details here.`);\n            logger.log(error);\n            logger.log(request);\n            logger.log(originalResponse);\n            logger.groupEnd();\n        }\n        return new Response('', {\n            status: 416,\n            statusText: 'Range Not Satisfiable',\n        });\n    }\n}\nexport { createPartialResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {string} rangeHeader A Range: header value.\n * @return {Object} An object with `start` and `end` properties, reflecting\n * the parsed value of the Range: header. If either the `start` or `end` are\n * omitted, then `null` will be returned.\n *\n * @private\n */\nfunction parseRangeHeader(rangeHeader) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(rangeHeader, 'string', {\n            moduleName: 'workbox-range-requests',\n            funcName: 'parseRangeHeader',\n            paramName: 'rangeHeader',\n        });\n    }\n    const normalizedRangeHeader = rangeHeader.trim().toLowerCase();\n    if (!normalizedRangeHeader.startsWith('bytes=')) {\n        throw new WorkboxError('unit-must-be-bytes', { normalizedRangeHeader });\n    }\n    // Specifying multiple ranges separate by commas is valid syntax, but this\n    // library only attempts to handle a single, contiguous sequence of bytes.\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range#Syntax\n    if (normalizedRangeHeader.includes(',')) {\n        throw new WorkboxError('single-range-only', { normalizedRangeHeader });\n    }\n    const rangeParts = /(\\d*)-(\\d*)/.exec(normalizedRangeHeader);\n    // We need either at least one of the start or end values.\n    if (!rangeParts || !(rangeParts[1] || rangeParts[2])) {\n        throw new WorkboxError('invalid-range-values', { normalizedRangeHeader });\n    }\n    return {\n        start: rangeParts[1] === '' ? undefined : Number(rangeParts[1]),\n        end: rangeParts[2] === '' ? undefined : Number(rangeParts[2]),\n    };\n}\nexport { parseRangeHeader };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {Blob} blob A source blob.\n * @param {number} [start] The offset to use as the start of the\n * slice.\n * @param {number} [end] The offset to use as the end of the slice.\n * @return {Object} An object with `start` and `end` properties, reflecting\n * the effective boundaries to use given the size of the blob.\n *\n * @private\n */\nfunction calculateEffectiveBoundaries(blob, start, end) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(blob, Blob, {\n            moduleName: 'workbox-range-requests',\n            funcName: 'calculateEffectiveBoundaries',\n            paramName: 'blob',\n        });\n    }\n    const blobSize = blob.size;\n    if ((end && end > blobSize) || (start && start < 0)) {\n        throw new WorkboxError('range-not-satisfiable', {\n            size: blobSize,\n            end,\n            start,\n        });\n    }\n    let effectiveStart;\n    let effectiveEnd;\n    if (start !== undefined && end !== undefined) {\n        effectiveStart = start;\n        // Range values are inclusive, so add 1 to the value.\n        effectiveEnd = end + 1;\n    }\n    else if (start !== undefined && end === undefined) {\n        effectiveStart = start;\n        effectiveEnd = blobSize;\n    }\n    else if (end !== undefined && start === undefined) {\n        effectiveStart = blobSize - end;\n        effectiveEnd = blobSize;\n    }\n    return {\n        start: effectiveStart,\n        end: effectiveEnd,\n    };\n}\nexport { calculateEffectiveBoundaries };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.2.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {module:workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            if (event.data && event.data.type === 'CACHE_URLS') { // eslint-disable-line\n                const { payload } = event.data; // eslint-disable-line\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise && (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\nexport class RenderableError extends Error {\n  title: string;\n  constructor(title: string, message: string) {\n    super(message);\n    this.title = title;\n    Object.setPrototypeOf(this, RenderableError.prototype);\n  }\n}\n\nexport const error404 = (message = \"Page not found\") =>\n  new RenderableError(\"404\", message);\n\nconst 佛心 = new RenderableError(\"╰(⊙д⊙)╮\", \"Open a directory to get started\");\nconst 公司 = new RenderableError(\"╭(⊙д⊙)╯\", 佛心.message);\nexport const errorNoSource = () => (Math.random() < 0.5 ? 佛心 : 公司);\n\nexport const error400 = (message: string) =>\n  new RenderableError(\"ヽ(´ー｀)┌\", message);\n\nexport const badsource = (message: string) =>\n  error400(`Bad data source: ${message}`);\n\nexport const error403 = (message: string) =>\n  new RenderableError(\"（・Ａ・）\", message);\n","import { badsource, error404, RenderableError } from \"./errors\";\n\nconst warnAndThrow = (e: any): never => {\n  console.warn(e);\n  throw badsource(`\"${e}\"`);\n};\n\nexport abstract class DataSource {\n  abstract get name(): string;\n  abstract header(): Promise<string | null>;\n  abstract get(typename: string, id: number, filename: string): Promise<Blob>;\n  abstract getAllMeta(typename: string): Promise<Array<any>>;\n\n  async getText(typename: string, id: number, filename: string) {\n    const file = await this.get(typename, id, filename);\n    return await file.text();\n  }\n\n  async getJson(typename: string, id: number, filename: string) {\n    const txt = await this.getText(typename, id, filename);\n    try {\n      return JSON.parse(txt);\n    } catch (e) {\n      warnAndThrow(e);\n    }\n  }\n\n  async getMeta(typename: string, id: number) {\n    return await this.getJson(typename, id, \"meta.json\");\n  }\n\n  async getMetas(typename: string, ids: Array<number> | undefined) {\n    if (ids === undefined) {\n      return [];\n    }\n    const result = [];\n    for (const id of ids) {\n      result.push(await this.getMeta(typename, id));\n    }\n    return result;\n  }\n}\n\nconst isNotFoundError = (e: any) => {\n  return e instanceof Error && e.name === \"NotFoundError\";\n};\n\nconst find = async <T>(\n  promise: Promise<T>,\n  notFound: () => RenderableError\n) => {\n  try {\n    return await promise;\n  } catch (e) {\n    if (isNotFoundError(e)) {\n      throw notFound();\n    }\n    throw e;\n  }\n};\n\nexport class FileSystemDataSource extends DataSource {\n  rootHandle: FileSystemDirectoryHandle;\n\n  constructor(rootHandle: FileSystemDirectoryHandle) {\n    super();\n    this.rootHandle = rootHandle;\n  }\n\n  async header() {\n    return null;\n  }\n\n  get name() {\n    return this.rootHandle.name;\n  }\n\n  async get(typename: string, id: number, filename: string) {\n    const typeDir = await find(\n      this.rootHandle.getDirectoryHandle(typename),\n      () => badsource(`missing directory \"${typename}\"`)\n    );\n    const objDir = await find(typeDir.getDirectoryHandle(id.toString()), () =>\n      error404(`${typename} not found`)\n    );\n    const fileHandle = await find(objDir.getFileHandle(filename), () =>\n      badsource(`missing file ${typename}/${objDir}/${filename}`)\n    );\n    return await fileHandle.getFile();\n  }\n\n  async getAllMeta(typename: string) {\n    const result = [];\n    const typeDir = await find(\n      this.rootHandle.getDirectoryHandle(typename),\n      () => badsource(`missing directory \"${typename}\"`)\n    );\n    for await (const entry of typeDir.values()) {\n      if (entry.kind !== \"directory\") {\n        continue;\n      }\n      const metaHandlePromise = entry.getFileHandle(\"meta.json\");\n      try {\n        await metaHandlePromise;\n      } catch (e) {\n        if (isNotFoundError(e)) {\n          console.warn(`missing meta.json for ${typename}/${entry.name}`);\n          continue;\n        } else {\n          throw e;\n        }\n      }\n      const metaFile = await (await metaHandlePromise).getFile();\n      const meta = JSON.parse(await metaFile.text());\n      result.push(meta);\n    }\n    return result;\n  }\n}\n\nexport class RemoteDataSource extends DataSource {\n  baseURL: string;\n\n  constructor(baseURL: string) {\n    super();\n    this.baseURL = baseURL;\n  }\n\n  get name() {\n    return this.baseURL;\n  }\n\n  async header() {\n    const resp = await this.fetch(\"source.json\");\n    try {\n      const json = await resp.json();\n      return json.header;\n    } catch (e) {\n      warnAndThrow(e);\n    }\n    return null;\n  }\n\n  private async fetch(path: string) {\n    const url = new URL(path, this.baseURL).toString();\n    let resp: Response;\n    try {\n      resp = await fetch(url);\n    } catch (e) {\n      warnAndThrow(e);\n    }\n    resp = resp!;\n    if (resp.status !== 200) {\n      throw new RenderableError(\n        resp.status.toString(),\n        `${url} ${resp.statusText}`\n      );\n    }\n    return resp;\n  }\n\n  async get(typename: string, id: number, filename: string) {\n    const resp = await this.fetch(`${typename}/${id}/${filename}`);\n    return await resp.blob();\n  }\n\n  async getAllMeta(typename: string) {\n    const resp = await this.fetch(`${typename}/all.json`);\n    try {\n      return await resp.json();\n    } catch (e) {\n      warnAndThrow(e);\n    }\n  }\n}\n\nexport const getSavedFilename = (meta: any) => {\n  // https://github.com/afq984/ilmsdump/blob/main/ilmsserve/__init__.py#L342\n  if (meta.saved_filename !== undefined) {\n    return meta.saved_filename;\n  }\n  if (meta.title === \"meta.json\") {\n    return \"meta_.json\";\n  }\n  return meta.title;\n};\n\nexport const serializeDataSource = (dataSource: DataSource) => {\n  if (dataSource instanceof FileSystemDataSource) {\n    return {\n      ty: \"FileSystemDataSource\",\n      data: dataSource.rootHandle,\n    };\n  } else if (dataSource instanceof RemoteDataSource) {\n    return {\n      ty: \"RemoteDataSource\",\n      data: dataSource.baseURL,\n    };\n  }\n  return null;\n};\n\nexport const deserializeDataSource = (obj: any) => {\n  if (obj.ty === \"FileSystemDataSource\") {\n    return new FileSystemDataSource(obj.data);\n  }\n  if (obj.ty == \"RemoteDataSource\") {\n    return new RemoteDataSource(obj.data);\n  }\n  return null;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","import { clientsClaim } from \"workbox-core\";\nimport {\n  RouteHandlerCallback,\n  RouteHandlerCallbackOptions,\n  RouteMatchCallback,\n} from \"workbox-core/types\";\nimport { createPartialResponse } from \"workbox-range-requests\";\nimport { registerRoute } from \"workbox-routing\";\nimport { getRedirectLocation } from \"./course-php\";\nimport {\n  DataSource,\n  getSavedFilename,\n  deserializeDataSource,\n} from \"./data-source\";\nimport { RenderableError } from \"./errors\";\n\ndeclare let self: ServiceWorkerGlobalScope;\n\nclientsClaim();\n\nlet dataSource: DataSource | null = null;\n\nself.addEventListener(\"message\", (event) => {\n  const data = event.data;\n  switch (data.op) {\n    case \"set_data_source\":\n      dataSource = deserializeDataSource(data.data);\n      console.log(`service worker received data source: ${dataSource?.name}`);\n      break;\n    case \"take_over\":\n      self.skipWaiting();\n      break;\n  }\n});\n\nself.addEventListener(\"activate\", () => {\n  console.log(\"service worker activated!\");\n});\n\nconst makePathMatcher = (pathname: string): RouteMatchCallback => {\n  return ({ url }) => {\n    // Do we need to check this?\n    return self.location.origin === url.origin && url.pathname === pathname;\n  };\n};\n\nconst makeRegexPathMatcher = (pattern: string): RouteMatchCallback => {\n  const regexp = new RegExp(pattern);\n  return ({ url }) => {\n    if (self.location.origin !== url.origin) {\n      return false;\n    }\n    return url.pathname.match(regexp);\n  };\n};\n\nconst handleStatus = async () => {\n  return new Response(\n    JSON.stringify({\n      version: 1,\n    }),\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n};\nregisterRoute(\"/sw-status.json\", handleStatus);\n\nconst maybeCreatePartialResponse = async (\n  request: Request,\n  response: Response\n) => {\n  if (request.headers.has(\"Range\")) {\n    return await createPartialResponse(request, response);\n  }\n  return response;\n};\n\nconst handleAttachment: RouteHandlerCallback = async ({ params, request }) => {\n  if (dataSource === null) {\n    return new Response(\"no data source available\", { status: 404 });\n  }\n  const id = parseInt((params as string[])[1]);\n  const meta = await dataSource.getMeta(\"attachment\", id);\n  const file = await dataSource.get(\"attachment\", id, getSavedFilename(meta));\n  return maybeCreatePartialResponse(\n    request,\n    new Response(file, {\n      headers: {\n        \"Content-Disposition\": `attachment; filename*=UTF-8''${encodeURI(\n          meta.title\n        )}`,\n      },\n    })\n  );\n};\nregisterRoute(makeRegexPathMatcher(\"^/attachment/(\\\\d+)$\"), handleAttachment);\n\nconst redirectAttachment = async (ctx: RouteHandlerCallbackOptions) => {\n  const id = ctx.url.searchParams.get(\"id\");\n  if (id === null) {\n    return new Response(\"query parameter id required\", {\n      status: 400,\n    });\n  }\n  return Response.redirect(`/attachment/${id}`);\n};\nregisterRoute(makePathMatcher(\"/sys/read_attach.php\"), redirectAttachment);\n\nconst handleVideo: RouteHandlerCallback = async ({ params, request }) => {\n  if (dataSource === null) {\n    return new Response(\"no data source available\", { status: 404 });\n  }\n  const id = parseInt((params as string[])[1]);\n  const file = await dataSource.get(\"video\", id, \"video.mp4\");\n  return maybeCreatePartialResponse(\n    request,\n    new Response(file, {\n      headers: {\n        \"Content-Type\": \"video/mp4\",\n      },\n    })\n  );\n};\nregisterRoute(makeRegexPathMatcher(\"^/video/(\\\\d+)$\"), handleVideo);\n\nconst handleSpa: RouteHandlerCallback = () => {\n  return fetch(\"/\");\n};\nregisterRoute(makeRegexPathMatcher(\"^/course/\"), handleSpa);\nregisterRoute(makePathMatcher(\"/download\"), handleSpa);\n\nconst redirectCoursePHP: RouteHandlerCallback = async ({ url }) => {\n  let location: string;\n  try {\n    location = getRedirectLocation(url.searchParams);\n  } catch (e) {\n    if (e instanceof RenderableError) {\n      return new Response(e.message, { status: e.title === \"404\" ? 404 : 400 });\n    }\n    throw e;\n  }\n  return Response.redirect(location);\n};\nregisterRoute(makePathMatcher(\"/course.php\"), redirectCoursePHP);\n","import { error400, error404 } from \"./errors\";\n\n// https://github.com/afq984/ilmsdump/blob/2ae39118b38c05f54e689d62bb245692269e5df3/ilmsserve/__init__.py#L377-L425\nexport const getRedirectLocation = (params: URLSearchParams): string => {\n  const param = (key: string) => {\n    const value = params.get(key);\n    if (value === null) {\n      throw error400(`missing required query parameter: ${key}`);\n    }\n    return value;\n  };\n\n  const courseID = param(\"courseID\");\n  const f = params.get(\"f\") || \"syllabus\";\n  switch (f) {\n    case \"syllabus\":\n      return `/course/${courseID}`;\n    case \"activity\":\n    case \"news\":\n      return `/course/${courseID}/announcement/`;\n    case \"doclist\":\n      return `/course/${courseID}/material/`;\n    case \"forumlist\":\n      return `/course/${courseID}/discussion/`;\n    case \"hwlist\":\n      return `/course/${courseID}/homework/`;\n    case \"score\":\n    case \"score_edit\":\n      return `/course/${courseID}/score`;\n    case \"group\":\n    case \"grouplist\":\n    case \"teamall\":\n    case \"team_forumlist\":\n    case \"team_memberlist\":\n    case \"team_homework\":\n      return `/course/${courseID}/grouplist`;\n    case \"news_show\":\n      return `/course/${courseID}/announcement/${param(\"newsID\")}`;\n    case \"doc\":\n      throw error404();\n    case \"forum\":\n      return `/course/${courseID}/discussion/${param(\"tid\")}`;\n    case \"hw\":\n      return `/course/${courseID}/homework/${param(\"hw\")}`;\n    case \"hw_doclist\":\n      return `/course/${courseID}/homework/${param(\"hw\")}/submission/`;\n    default:\n      throw error404();\n  }\n};\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClassName","isReturnValueProblem","classNameStr","expectedMethod","entry","firstEntry","secondEntry","thrownErrorMessage","cacheNameId","name","methodName","expectedClass","normalizedRangeHeader","size","start","end","url","message","status","cacheName","origin","messageGenerator","code","details","WorkboxError","constructor","errorCode","super","this","finalAssertExports","object","validValues","includes","registration","scope","getFriendlyURL","URL","String","location","href","replace","RegExp","async","createPartialResponse","request","originalResponse","assert","Request","Response","rangeHeader","headers","get","boundaries","trim","toLowerCase","startsWith","rangeParts","exec","undefined","Number","parseRangeHeader","originalBlob","blob","effectiveBoundaries","Blob","blobSize","effectiveStart","effectiveEnd","calculateEffectiveBoundaries","slicedBlob","slice","slicedBlobSize","slicedResponse","statusText","set","validMethods","normalizeHandler","handler","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","result","index","toString","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","responsePromise","handleRequest","respondWith","addCacheListener","data","type","payload","urlsToCache","requestPromises","Promise","all","map","waitUntil","ports","then","postMessage","protocol","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","forEach","msg","Array","isArray","err","reject","_catchHandler","catch","catchErr","matchResult","length","setDefaultHandler","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","RenderableError","title","setPrototypeOf","prototype","error404","error400","badsource","warnAndThrow","DataSource","typename","id","filename","file","text","txt","getText","parse","getJson","ids","getMeta","isNotFoundError","find","promise","notFound","FileSystemDataSource","rootHandle","typeDir","getDirectoryHandle","objDir","fileHandle","getFileHandle","getFile","values","kind","metaHandlePromise","metaFile","meta","RemoteDataSource","baseURL","resp","fetch","json","header","path","clients","claim","dataSource","op","obj","ty","skipWaiting","makePathMatcher","makeRegexPathMatcher","pattern","regexp","version","maybeCreatePartialResponse","response","parseInt","saved_filename","getSavedFilename","encodeURI","ctx","searchParams","redirect","handleSpa","param","courseID","getRedirectLocation"],"mappings":"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"}